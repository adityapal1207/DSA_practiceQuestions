Leetcode   43. Multiply Strings
Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.

Note: You must not use any built-in BigInteger library or convert the inputs to integer directly.

 

Example 1:

Input: num1 = "2", num2 = "3"
Output: "6"
Example 2:

Input: num1 = "123", num2 = "456"
Output: "56088"
 

Constraints:

1 <= num1.length, num2.length <= 200
num1 and num2 consist of digits only.
Both num1 and num2 do not contain any leading zero, except the number 0 itself.


class Solution {
    public String multiply(String num1, String num2) {

          int len = num1.length() + num2.length();
          
         int ans[]=new int[len];
         Arrays.fill(ans,0);
        
        for(int i = num1.length()-1;i>=0;i--){
            for(int j = num2.length()-1;j>=0;j--){
                int n1=num1.charAt(i)-'0';
                int n2 = num2.charAt(j)-'0';
                int prod=n1*n2;
                
                int sum = ans[i+j+1] + prod;
                // if(sum>9){
                    ans[i+j+1]=sum%10;
                    ans[i+j]=ans[i+j]+(sum/10);
                    
                // }
                // else{
                //     ans[i+j+1]=sum;
                
                    
                // }
                
            }
        }
    //    String ansString="";
    //    if(ans[0]==0){
    //   for(int i=1;i<ans.length;i++){
    //        ansString+=ans[i] +"";
    //   }
    //    }
    //    else{

    //           for(int i=1;i<ans.length;i++){
    //      ansString+=ans[i] +"";
    //   }
    //    }

    //   return ansString;

    StringBuilder result = new StringBuilder();
        for (int digit : ans) {
            result.append(digit);
        }

        while (result.length() > 0 && result.charAt(0) == '0') {
            result.deleteCharAt(0);
        }

        return result.length() == 0 ? "0" : result.toString();


    }
}
