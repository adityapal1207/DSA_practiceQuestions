leetcode 32. Longest Valid Parentheses
Given a string containing just the characters '(' and ')', return the length of the longest valid (well-formed) parentheses 
substring
.

 

Example 1:

Input: s = "(()"
Output: 2
Explanation: The longest valid parentheses substring is "()".
Example 2:

Input: s = ")()())"
Output: 4
Explanation: The longest valid parentheses substring is "()()".
Example 3:

Input: s = ""
Output: 0
 

class Solution {
    public int longestValidParentheses(String s) {
        int open =0;
        int closed=0;
        int max=0;
        for(int i=0;i<s.length();i++){
            if(s.charAt(i)=='('){
                open++;
            }
            else{
                closed++;
            }

            if(closed>open){
                 open=0;
                 closed=0;
                 continue;
            }
            else if(closed==open){
                  max= Math.max(max, open*2);
            }



        }   open=0;
          closed=0;

         for(int i =s.length()-1 ; i>=0;i--){
            if(s.charAt(i)==')'){
                open++;
            }
            else{
                closed++;
            }

            if(closed>open){
                 open=0;
                 closed=0;
                 continue;
            }
            else if(closed==open){
                  max= Math.max(max, open*2);
            }



        }
        return max;
    }
}
