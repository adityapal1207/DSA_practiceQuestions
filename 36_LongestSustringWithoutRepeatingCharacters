Leetcode 3. Longest Substring Without Repeating Characters
Given a string s, find the length of the longest 
substring
 without repeating characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.
 

Constraints:

0 <= s.length <= 5 * 104
s consists of English letters, digits, symbols and spaces.


class Solution {
    public int lengthOfLongestSubstring(String s) {
          
          int slow=0;
          int fast=0;
          int  longestlength=0;
          HashMap<Character,Integer> map= new HashMap<Character,Integer>();
          while(fast<s.length()){
              if(map.containsKey(s.charAt(fast))){
                slow=Math.max(map.get(s.charAt(fast))+  1 , slow);
              }

              map.put(s.charAt(fast), fast);
     
              longestlength=Math.max(longestlength,fast-slow+1);
                       fast=fast+1;


          }


        return longestlength;
    }
}
